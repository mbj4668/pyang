<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook"
          version="5.0"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xml:id="man.1.yang2dsdl">

  <info>
    <author>
      <personname>Ladislav Lhotka</personname>
      <affiliation><orgname>CZ.NIC</orgname></affiliation>
      <email>lhotka@nic.cz</email>
      <contrib/>
    </author>
    <date>%DATE%</date>
  </info>

  <refmeta>
    <refentrytitle>yang2dsdl</refentrytitle>
    <manvolnum>1</manvolnum>
    <refmiscinfo class="manual">pyang manual</refmiscinfo>
    <refmiscinfo class="source">yang2dsdl-%PYANG_VERSION%</refmiscinfo>
  </refmeta>

  <refnamediv xml:id="man.1.yang2dsdl.name">
    <refname>yang2dsdl</refname>
    <refpurpose>translates YANG data models to DSDL schemas and
    validates instance documents.</refpurpose>
  </refnamediv>

  <refsynopsisdiv xml:id="man.1.yang2dsdl.synopsis">
    <cmdsynopsis>
      <command>yang2dsdl</command>
      <arg choice="opt">-t <replaceable>target</replaceable></arg>
      <arg choice="opt">-d <replaceable>dir</replaceable></arg>
      <arg choice="opt">-b <replaceable>basename</replaceable></arg>
      <arg choice="opt">-j</arg>
      <arg choice="opt">-x</arg>
      <arg choice="opt">-c</arg>
      <arg choice="opt">-v <replaceable>instance</replaceable></arg>
      <arg choice="plain" rep="repeat">
        <replaceable>file</replaceable>
      </arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>yang2dsdl</command>
      <arg choice="plain">-L</arg>
      <arg choice="opt">-t <replaceable>target</replaceable></arg>
      <arg choice="opt">-d <replaceable>dir</replaceable></arg>
      <arg choice="opt">-b <replaceable>basename</replaceable></arg>
      <arg choice="opt">-j</arg>
      <arg choice="opt">-x</arg>
      <arg choice="opt">-c</arg>
      <arg choice="opt">-v <replaceable>instance</replaceable></arg>
      <arg choice="plain">
        <replaceable>file</replaceable>
      </arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>yang2dsdl</command>
      <arg choice="plain">-s</arg>
      <arg choice="opt">-t <replaceable>target</replaceable></arg>
      <arg choice="opt">-d <replaceable>dir</replaceable></arg>
      <arg choice="plain">-b <replaceable>basename</replaceable></arg>
      <arg choice="opt">-j</arg>
      <arg choice="opt">-x</arg>
      <arg choice="opt">-c</arg>
      <arg choice="plain">-v <replaceable>instance</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>yang2dsdl</command>
      <arg choice="plain">-h</arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1 xml:id="man.1.yang2dsdl.description">
    <title>Description</title>
    <para>This shell script facilitates the translation of a data
    model described by one or more input YANG modules to DSDL schemas
    (RELAX NG, Schematron and DSRL) for a selected instance XML
    document type, as described in <link
    xlink:href="http://tools.ietf.org/html/rfc6110">RFC 6110</link>. Optionally,
    the script can validate an instance document of the given type
    against the schemas.</para>
    <para>The input YANG module(s) may be given either directly as
    <replaceable>file</replaceable> parameter(s) on the command line,
    or indirectly through a server &lt;hello&gt; message which also
    declares capabilities and features supported by the server. The
    latter alternative is indicated by the <option>-L</option> switch,
    and only one <replaceable>file</replaceable> parameter may be
    given in this case.</para>
    <para>Input YANG module(s) may be expressed in YANG or YIN
    syntax. The output DSDL schemas are written to the directory
    <replaceable>dir</replaceable> (current directory by
    default). Unless the option <option>-s</option> is used, this
    directory must be writable.</para>
    <para>Metadata annotations are also supported, if they are defined
    and used as described in <link
    xlink:href="http://tools.ietf.org/html/rfc7952">RFC 7952</link>.</para>

    <para>The script can be executed by any shell interpreter
    compatible with POSIX.2, such as
    <citerefentry><refentrytitle>bash</refentrytitle><manvolnum>1</manvolnum></citerefentry>
    or
    <citerefentry><refentrytitle>dash</refentrytitle><manvolnum>1</manvolnum></citerefentry>.</para>

    <para>The <replaceable>target</replaceable> argument specifies the
    type of the target instance document. Supported values are:</para>
    <variablelist>
      <varlistentry>
        <term><literal>data</literal></term>
        <listitem><para>Datastore contents (configuration and state
        data) encapsulated in &lt;nc:data&gt; document
        element.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>config</literal></term>
        <listitem><para>A configuration datastore contents
        encapsulated in &lt;nc:config&gt; document
        element.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>get-reply</literal></term>
        <listitem><para>A complete NETCONF message
        containing a reply to the &lt;nc:get&gt;
        operation.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>get-data-reply</literal></term>
        <listitem><para>A complete NETCONF message
        containing a reply to the &lt;ncds:get-data&gt;
        operation.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>get-config-reply</literal></term>
        <listitem><para>A complete NETCONF message
        containing a reply to the &lt;nc:get-config&gt;
        operation.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>edit-config</literal></term>
        <listitem><para>A complete NETCONF message
        containing an &lt;nc:edit-config&gt; request. Only the RELAX
        NG schema is generated for this target.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>rpc</literal></term>
        <listitem><para>An RPC request defined in an input YANG
        module.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>rpc-reply</literal></term>
        <listitem><para>An RPC reply defined in an input YANG
        module.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>notification</literal></term>
        <listitem><para>An event notification defined in an input
        YANG module.</para></listitem>
      </varlistentry>
    </variablelist>

    <para>The output schemas are contained in the following four files
    whose names depend on the arguments
    <replaceable>basename</replaceable> and
    <replaceable>target</replaceable>:</para>
    <variablelist>
      <varlistentry>
        <term>
          <filename><replaceable>basename</replaceable>-<replaceable>target</replaceable>.rng</filename>
        </term>
        <listitem><para>RELAX NG schema for the target document
        type.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <filename><replaceable>basename</replaceable>-gdefs-config.rng</filename>,
	  <filename><replaceable>basename</replaceable>-gdefs-edit.rng</filename>,
	  <filename><replaceable>basename</replaceable>-gdefs.rng</filename>
        </term>
        <listitem><para>Auxiliary RELAX NG schema containing global
        named pattern definitions. The first is generated for "config"
	and "get-config-reply" targets, the second for "edit-config"
	and the third for the remaining targets.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <filename><replaceable>basename</replaceable>-<replaceable>target</replaceable>.sch</filename>
        </term>
        <listitem><para>Schematron schema for the target document
        type. Not generated for the "edit-config" target.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <filename><replaceable>basename</replaceable>-<replaceable>target</replaceable>.dsrl</filename>
        </term>
        <listitem><para>DSRL schema for the target document
        type. Not generated for the "edit-config" target.</para></listitem>
      </varlistentry>
    </variablelist>

    <para>Optional validation of an XML document stored in the file
    <replaceable>instance</replaceable> proceeds as follows:</para>
    <orderedlist>
      <listitem xml:id="val-rng">
        <para>Grammatical and datatype constraints are checked using
        the RELAX NG schema.</para>
      </listitem>
      <listitem xml:id="val-dsrl">
        <para>The DSRL schema is used for adding default values
        together with ancestor containers to the instance document
        where necessary.</para>
      </listitem>
      <listitem xml:id="val-sch">
        <para>Semantic constraints are checked using the Schematron
        schema. The skeleton implementation of <link
        xlink:href="http://www.schematron.com">ISO Schematron</link>
        by Rick Jelliffe is included in the distribution and used for
        this purpose.</para>
      </listitem>
    </orderedlist>
    <para>Steps <xref linkend="val-dsrl"/> and <xref
    linkend="val-sch"/> are not performed for the "edit-config"
    target, or if step <xref
    linkend="val-rng"/> reports any errors.</para>
    <para>Option <option>-s</option> may be used together with
    <option>-v</option> for validating an instance document without
    generating the schemas. This assumes that the schemas are already
    present in the directory selected by the <option>-d</option>
    option (current directory by default). In this case, the basename
    of the schemas must be specified using <option>-b</option>
    <replaceable>basename</replaceable> and the input YANG modules
    need not be given. Also, if the DSRL or Schematron schema is
    missing, the corresponding step is skipped.</para>
    <para>The script uses programs from the libxml2 suite -
    <command>xmllint</command>(1) for RELAX NG validation and
    <command>xsltproc</command>(1) for performing XSLT
    transformations. Alternatively, <command>jing</command>(1) can be
    used for RELAX NG validation (option <option>-j</option>). If
    necessary, the script could be easily modified for use with other
    RELAX NG validators and/or XSLT1 processors supporting
    EXSLT.</para>
  </refsect1>

  <refsect1 xml:id="man.1.yang2dsdl.options">
    <title>Options</title>
    <variablelist remap="TP">
      <varlistentry>
        <term><option>-b</option>
        <replaceable>basename</replaceable></term>
        <listitem>
          <para>Specifies the basename of files in which the output
          schemas are stored. The default is the concatenation of the
          names of all input YANG modules connected with the
          underscore character "_". This option is mandatory if
          <option>-s</option> is used.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-d</option>
        <replaceable>dir</replaceable></term>
        <listitem>
          <para>Specifies the directory for output files. By default
          they are stored in the current directory.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-h</option></term>
        <listitem>
          <para>Displays help screen and exits.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-j</option></term>
        <listitem>
          <para>Uses <command>jing</command>(1) for RELAX NG validation
          instead of the default <command>xmllint</command>(1).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-L</option></term>
        <listitem>
          <para>
            Interpret the <replaceable>file</replaceable> parameter as
            the name of a file containing a server &lt;hello&gt;
            message. In this case, exactly one
            <replaceable>file</replaceable> parameter must be given.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-s</option></term>
        <listitem>
          <para>Performs just validation, without (re)generating the
          schemas. This option is only allowed together with
          <option>-v</option> and <option>-b</option>
          <replaceable>basename</replaceable> must also be
          specified.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-t</option>
        <replaceable>target</replaceable></term>
        <listitem>
          <para>Specifies the target XML document type using one of
          the following strings as explained above:
          <userinput>data</userinput> (default),
          <userinput>config</userinput>,
          <userinput>get-reply</userinput>,
          <userinput>get-data-reply</userinput>,
          <userinput>get-config-reply</userinput>,
          <userinput>edit-config</userinput>,
          <userinput>rpc</userinput>, <userinput>rpc-reply</userinput>
          or <userinput>notification</userinput>.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-v</option>
        <replaceable>instance</replaceable></term>
        <listitem>
          <para>Validates an instance XML document contained in file
          <replaceable>instance</replaceable>.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-x</option></term>
        <listitem>
          <para>Try to translate modules written in unsupported YANG
          versions.  If the module doesn't use any constructs
          introduced after YANG version 1, this may work.  This option
          may produce unexpected results.  Use at own risk.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-c</option></term>
        <listitem>
          <para>Use only definitions with status "current" in the YANG
          module.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1 xml:id="man.1.yang2dsdl.files">
    <title>FILES</title>
    <variablelist>
      <varlistentry>
        <term>
          <filename>/usr/local/share/yang/xslt/gen-relaxng.xsl</filename>
        </term>
        <listitem>
          <para>XSLT stylesheet generating RELAX NG schemas.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <filename>/usr/local/share/yang/xslt/gen-schematron.xsl</filename>
        </term>
        <listitem>
          <para>XSLT stylesheet generating Schematron schemas.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <filename>/usr/local/share/yang/xslt/gen-dsrl.xsl</filename>
        </term>
        <listitem>
          <para>XSLT stylesheet generating DSRL schemas.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <filename>/usr/local/share/yang/xslt/gen-common.xsl</filename>
        </term>
        <listitem>
          <para>Common templates for all three XSLT generators.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <filename>/usr/local/share/yang/xslt/dsrl2xslt.xsl</filename>
        </term>
        <listitem>
          <para>Translates a subset of DSRL containing only
          specification of default contents to an XSLT
          stylesheet.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <filename>/usr/local/share/yang/xslt/svrl2text.xsl</filename>
        </term>
        <listitem>
          <para>Translates an SVRL report to plain text.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <filename>/usr/local/share/yang/schema/relaxng-lib.rng</filename>
        </term>
        <listitem>
          <para>RELAX NG library of common NETCONF elements.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <filename>/usr/local/share/yang/schema/edit-config-attributes.rng</filename>
        </term>
        <listitem>
          <para>RELAX NG definitions of &lt;edit-config&gt; attributes.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1 xml:id="man.1.yang2dsdl.env">
    <title>ENVIRONMENT VARIABLES</title>
    <variablelist>
      <varlistentry>
        <term><envar>PYANG_XSLT_DIR</envar></term>
        <listitem>
          <para>Alternative directory for XSLT stylesheets. The
          default is installation dependent.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><envar>PYANG_RNG_LIBDIR</envar></term>
        <listitem>
          <para>Alternative directory for the RELAX NG library. The
          default is installation dependent.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><envar>XSLT_OPTS</envar></term>
        <listitem>
          <para>Options to pass to the XSLT processor when generating
          the DSDL schemas. This is mainly useful for debugging.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1 xml:id="man.1.yang2dsdl.examples">
    <title>Examples</title>

    <screen>$ yang2dsdl -v dhcp-data.xml dhcp.yang</screen>
    <para>This command generates the DSDL schemas for the datastore
    contents (default <replaceable>data</replaceable> target) as
    defined by the <filename>dhcp.yang</filename> module and validates
    an instance document stored in the
    <filename>dhcp-data.xml</filename> file.</para>

    <screen>$ yang2dsdl -t rpc rpc-rock.yang</screen>
    <para>This command generates DSDL schemas for the choice of input
    parts (requests) of all RPC operations defined in the module
    <filename>rpc-rock.yang</filename>.</para>
  </refsect1>

  <refsect1 xml:id="man.1.yang2dsdl.diagnostics">
    <title>Diagnostics</title>
    <para><command>yang2dsdl</command> return codes have the
    following meaning:</para>
    <variablelist>
      <varlistentry>
        <term>0</term>
        <listitem><para>No error (normal termination)</para></listitem>
      </varlistentry>
      <varlistentry>
        <term>1</term>
        <listitem><para>Error in input parameters</para></listitem>
      </varlistentry>
      <varlistentry>
        <term>2</term>
        <listitem><para>Error in DSDL schema generation</para></listitem>
      </varlistentry>
      <varlistentry>
        <term>3</term>
        <listitem><para>Instance validation failed</para></listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1 xml:id="man.1.yang2dsdl.bugs">
    <title>Bugs</title>

    <orderedlist>
      <listitem>
        <para>
          The logic of command-line arguments may not be able to
          distinguish replies to different RPC requests, for example
          if the replies have the same top-level element.
        </para>
      </listitem>
    </orderedlist>

  </refsect1>

  <refsect1 xml:id="man.1.yang2dsdl.seealso">
    <title>See Also</title>
    <para><citerefentry>
      <refentrytitle>pyang</refentrytitle>
      <manvolnum>1</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>xsltproc</refentrytitle>
      <manvolnum>1</manvolnum>
      </citerefentry>, <citerefentry>
      <refentrytitle>xmllint</refentrytitle>
      <manvolnum>1</manvolnum> </citerefentry>, <link
      xlink:href="http://tools.ietf.org/html/rfc6110">RFC 6110</link>,
      <link xlink:href="http://www.dsdl.org/">DSDL</link>, <link
      xlink:href="http://www.relaxng.org/">RELAX NG</link>, <link
      xlink:href="http://www.schematron.com">ISO Schematron</link>.
    </para>

  </refsect1>


</refentry>
