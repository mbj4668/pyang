<?xml version="1.0" encoding="UTF-8"?>
<module name="ethernet"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:eth="urn:ieee:params:xml:ns:yang:ethernet"
        xmlns:if="urn:ietf:params:xml:ns:yang:ietf-interfaces"
        xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type">
  <namespace uri="urn:ieee:params:xml:ns:yang:ethernet"/>
  <prefix value="eth"/>
  <import module="ietf-interfaces">
    <prefix value="if"/>
  </import>
  <import module="iana-if-type">
    <prefix value="ianaift"/>
  </import>
  <organization>
    <text>Cisco Systems, Inc.
Customer Service

Postal: 170 W Tasman Drive
San Jose, CA 95134

Tel: +1 1800 553-NETS

E-mail: cs-yang@cisco.com</text>
  </organization>
  <contact>
    <text>Robert Wilton - rwilton@cisco.com</text>
  </contact>
  <description>
    <text>This module contains YANG definitions for configuring 802.3
Ethernet Interfaces, with the hope that it forms the basis of a
standardized 802.3 Ethernet interface configuration YANG
model.</text>
  </description>
  <revision date="2015-11-23">
    <description>
      <text>Initial revision of YANG model for IEEE Std 802.3 Ethernet interfaces</text>
    </description>
    <reference>
      <text>IEEE Std 802.3-2015, unless explicitly dated in the text.</text>
    </reference>
  </revision>
  <identity name="eth-if-speed">
    <description>
      <text>Representing the configured or negotiated speed of
an Ethernet interface.  Definitions are only
required for PHYs that can run at different speeds
(e.g. BASE-T).</text>
    </description>
  </identity>
  <identity name="eth-if-speed-10mb">
    <base name="eth-if-speed"/>
    <description>
      <text>10 Mb/s</text>
    </description>
  </identity>
  <identity name="eth-if-speed-100mb">
    <base name="eth-if-speed"/>
    <description>
      <text>100 Mb/s</text>
    </description>
  </identity>
  <identity name="eth-if-speed-1gb">
    <base name="eth-if-speed"/>
    <description>
      <text>1 Gb/s</text>
    </description>
  </identity>
  <identity name="eth-if-speed-2.5gb">
    <base name="eth-if-speed"/>
    <description>
      <text>2.5 Gb/s</text>
    </description>
    <reference>
      <text>IEEE P802.3bz (http://www.ieee802.org/3/bz/)</text>
    </reference>
  </identity>
  <identity name="eth-if-speed-5gb">
    <base name="eth-if-speed"/>
    <description>
      <text>5 Gb/s</text>
    </description>
    <reference>
      <text>IEEE P802.3bz (http://www.ieee802.org/3/bz/)</text>
    </reference>
  </identity>
  <identity name="eth-if-speed-10gb">
    <base name="eth-if-speed"/>
    <description>
      <text>10 Gb/s</text>
    </description>
  </identity>
  <identity name="eth-if-speed-40gb">
    <base name="eth-if-speed"/>
    <description>
      <text>40 Gb/s</text>
    </description>
  </identity>
  <identity name="eth-if-speed-100gb">
    <base name="eth-if-speed"/>
    <description>
      <text>100 Gb/s</text>
    </description>
  </identity>
  <typedef name="flow-control-settings">
    <type name="enumeration">
      <enum name="true">
        <description>
          <text>The value of 'true' for IEEE Std 802.3 Ethernet interfaces operating at speeds above 1000 Mb/s that support Rate Control through lowering the average data rate of the MAC sublayer, with frame granularity.
</text>
        </description>
      </enum>
      <enum name="false">
        <description>
          <text>The value of 'false' for IEEE Std 802.3 Ethernet interfaces operating at speeds above 1000 Mb/s that do not support Rate Control through lowering the average data rate of the MAC sublayer, with frame granularity.</text>
        </description>
      </enum>
    </type>
    <description>
      <text>Enumerates the possible values for the 'rate-control-ability' object</text>
    </description>
    <reference>
      <text>IEEE Std 802.3, 30.3.1.1.33, aRateControlAbility</text>
    </reference>
  </typedef>
  <typedef name="rate-control">
    <type name="enumeration">
      <enum name="disabled">
        <value value="1"/>
        <description>
          <text>The Rate Control is disabled</text>
        </description>
      </enum>
      <enum name="enabled">
        <value value="2"/>
        <description>
          <text>The Rate Control is enabled</text>
        </description>
      </enum>
      <enum name="unknown">
        <value value="3"/>
        <description>
          <text>The Rate Control status is undefined</text>
        </description>
      </enum>
    </type>
    <description>
      <text>Enumerates the possible values for the 'rate-control-status' object</text>
    </description>
    <reference>
      <text>IEEE Std 802.3, 30.3.1.1.34, aRateControlStatus</text>
    </reference>
  </typedef>
  <typedef name="pause-control">
    <type name="enumeration">
      <enum name="disabled">
        <value value="1"/>
        <description>
          <text>The PAUSE Control is disabled</text>
        </description>
      </enum>
      <enum name="enabled-Tx">
        <value value="2"/>
        <description>
          <text>The PAUSE operation is enabled in transmit direction only</text>
        </description>
      </enum>
      <enum name="enabled-Rx">
        <value value="3"/>
        <description>
          <text>The PAUSE operation is enabled in receive direction only</text>
        </description>
      </enum>
      <enum name="enabled-bidirectional">
        <value value="4"/>
        <description>
          <text>The PAUSE operation is enabled in receive and transmit directions</text>
        </description>
      </enum>
    </type>
    <description>
      <text>Enumerates the possible values for the 'macc-pause-control' object</text>
    </description>
    <reference>
      <text>IEEE Std 802.3.1, dot3PauseAdminMode and dot3PauseOperMode</text>
    </reference>
  </typedef>
  <typedef name="macc-control">
    <type name="enumeration">
      <enum name="PAUSE">
        <value value="0"/>
        <description>
          <text>IEEE Std 802.3 Ethernet PAUSE flow control</text>
        </description>
      </enum>
      <enum name="MPCP">
        <value value="1"/>
        <description>
          <text>IEEE Std 802.3 Ethernet Multi-Point Control Protocol</text>
        </description>
      </enum>
      <enum name="PFC">
        <value value="2"/>
        <description>
          <text>IEEE Std 802.3 Ethernet Priority-based Flow Control</text>
        </description>
      </enum>
    </type>
    <description>
      <text>Enumerates the possible values for the 'macc-control' object</text>
    </description>
    <reference>
      <text>IEEE Std 802.3.1, dot3ControlFunctionsSupported</text>
    </reference>
  </typedef>
  <augment target-node="/if:interfaces/if:interface">
    <when condition="if:type = 'ianaift:ethernetCsmacd'">
      <description>
        <text>Applies to all P2P Ethernet interfaces</text>
      </description>
    </when>
    <description>
      <text>Augment interface model with IEEE Std 803.2 Ethernet
specific configuration nodes</text>
    </description>
    <container name="ethernet">
      <description>
        <text>Contains all Ethernet interface related configuration</text>
      </description>
      <choice name="transmission-mode">
        <description>
          <text>Indicates whether the transmission parameters are manually
configured or automatically negotiated with the peer
device</text>
        </description>
        <case name="auto-negotiation">
          <description>
            <text>Transmission parameters are automatically
negotiated</text>
          </description>
          <container name="auto-negotiation">
            <description>
              <text>Contains auto-negotiation transmission parameters</text>
            </description>
            <reference>
              <text>IEEE Std 802.3 section 28 and annexes 28A-D</text>
            </reference>
            <leaf name="status">
              <type name="enumeration">
                <enum name="enabled">
                  <description>
                    <text>Auto-negotiation function is enabled</text>
                  </description>
                </enum>
                <enum name="disabled">
                  <description>
                    <text>Auto-negotiation function is disabled</text>
                  </description>
                </enum>
              </type>
              <description>
                <text>Allows auto-negotiation to be explicitly
enabled/disabled.  If the leaf is not present then
the default behaviour is vendor/interface
specific.</text>
              </description>
            </leaf>
            <leaf name="duplex">
              <type name="enumeration">
                <enum name="full">
                  <description>
                    <text>Restricts auto-negotiation to advertising full
duplex only.  Negotiation will fail, and the
link will not come up, if the peer device only
allows for half duplex during negotiation.</text>
                  </description>
                </enum>
                <enum name="half">
                  <description>
                    <text>Restricts auto-negotiation to advertising half
duplex only.  Negotiation will fail, and the
link will not come up, if the peer device only
allows for full duplex during negotiation.</text>
                  </description>
                </enum>
              </type>
              <description>
                <text>Allows the advertised duplex value in the
negotiation to be restricted.  Half duplex can
only be negotiated for some interface types - as
specified in 802.3, annex section 28B.3.  If not
specified then the default behaviour is to
negotiate all available values for the particular
type of Ethernet PHY associated with the
interface.</text>
              </description>
            </leaf>
            <leaf name="speed">
              <type name="identityref">
                <base name="eth-if-speed"/>
              </type>
              <description>
                <text>Allows the advertised speed value in the negotiation
to be restricted. Speed is only negotiated for some
PHYs, many higher speed PHYs operate at a fixed
speed.  If this leaf is not set then the default
behaviour is to negotiate all available speeds,
generally choosing the fastest speed as per 802.3
Annex 28B.3.</text>
              </description>
              <reference>
                <text>IEEE Std 802.3 Annex section 28B.3</text>
              </reference>
            </leaf>
            <leaf name="advertised-flow-control">
              <type name="enumeration">
                <enum name="disabled">
                  <description>
                    <text>Explicitly prevents ingress or egress
flow-control from being negotiated with the peer
device.</text>
                  </description>
                  <reference>
                    <text>IEEE Std 802.3 Table 28B-2,
Capability: No PAUSE</text>
                  </reference>
                </enum>
                <enum name="ingress-only">
                  <description>
                    <text>Allows only ingress flow-control to be
negotiated with the peer device</text>
                  </description>
                  <reference>
                    <text>IEEE Std 802.3 Table 28B-2, Capability:
Asymmetric PAUSE towards link partner</text>
                  </reference>
                </enum>
                <enum name="bi-directional-only">
                  <description>
                    <text>Allows only bi-directional flow-control to be
negotiated with the peer device.</text>
                  </description>
                  <reference>
                    <text>IEEE Std 802.3 Table 28B-2, Capability:
Symmetric PAUSE</text>
                  </reference>
                </enum>
              </type>
              <description>
                <text>By default, the flow control capabilities that are
negotiated allows for bi-directional or egress-only
flow control to be negotiated (depending on the peer
device capabilities/configuration).</text>
              </description>
              <reference>
                <text>IEEE Std 802.3 Table 28B-2, Capability:
Both Symmetric PAUSE and Asymmetric PAUSE toward
local device</text>
              </reference>
            </leaf>
            <leaf name="forced-flow-control">
              <type name="macc-control"/>
              <description>
                <text>Explicitly force the local flow control settings
regardless of what has been negotiated.  Since the
auto-negotiation of flow-control settings doesn't
allow all sane combinations to be negotiated (e.g.
consider a device that is only capable of sending
PAUSE frames connected to a peer device that is only
capable of receiving and acting on PAUSE frames) and
failing to agree on the flow-control settings
doesn't cause the auto-negotation to fail
completely, then it is sometimes useful to be able
to explicitly enable particular flow control
settings on the local device regardless of what is
being advertised or negotiated</text>
              </description>
              <reference>
                <text>IEEE Std 802.3 Table 28B-3-Pause resolution</text>
              </reference>
            </leaf>
          </container>
        </case>
        <case name="manual">
          <description>
            <text>Transmission parameters are manually configured (as
required)</text>
          </description>
          <container name="manual">
            <description>
              <text>Manually configured transmission parameters</text>
            </description>
            <leaf name="duplex">
              <type name="enumeration">
                <enum name="full">
                  <description>
                    <text>Forces the interface to run in full duplex
mode.</text>
                  </description>
                </enum>
                <enum name="half">
                  <description>
                    <text>Forces the interface to run in half duplex mode.
Not applicable to many PHY types.</text>
                  </description>
                </enum>
              </type>
              <default value="full"/>
              <description>
                <text>Configures the interface to run in either
full or half duplex mode.</text>
              </description>
            </leaf>
            <leaf name="speed">
              <type name="identityref">
                <base name="eth-if-speed"/>
              </type>
              <description>
                <text>For PHY types that may operate at various speeds,
this leaf allows the interface to be forced to
operate at a particular speed.  Without any explicit
configuration, Ethernet interfaces run at the
maximum speed that they are capable of operating
at</text>
              </description>
            </leaf>
            <leaf name="flow-control">
              <type name="macc-control"/>
              <description>
                <text>The default flow-control capabilities are
vendor/interface specific</text>
              </description>
            </leaf>
          </container>
        </case>
      </choice>
    </container>
  </augment>
  <augment target-node="/if:interfaces-state/if:interface">
    <when condition="if:type = 'ianaift:ethernetCsmacd'">
      <description>
        <text>Applies to all Ethernet interfaces</text>
      </description>
    </when>
    <description>
      <text>Augments interfaces-state model with 803.2 Ethernet
specific operational state nodes</text>
    </description>
    <container name="Ethernet">
      <description>
        <text>Contains operational state for Ethernet interfaces</text>
      </description>
      <container name="auto-negotiation">
        <presence value="Indicates that auto-negotiation is enabled"/>
        <description>
          <text>Contains auto-negotiation status</text>
        </description>
        <leaf name="status">
          <type name="enumeration">
            <enum name="successful">
              <description>
                <text>Auto-negotation has completed successfully</text>
              </description>
            </enum>
            <enum name="failed">
              <description>
                <text>Auto-negotiation has failed</text>
              </description>
            </enum>
            <enum name="unknown">
              <description>
                <text>The auto-negotiation status is not currently known,
this may be because it is still negotiating or the
protocol cannot run (e.g. if no medium is present)</text>
              </description>
            </enum>
          </type>
          <description>
            <text>The status of the auto-negotiation protocol</text>
          </description>
        </leaf>
      </container>
      <leaf name="duplex">
        <type name="enumeration">
          <enum name="unknown">
            <value value="1"/>
            <description>
              <text>current  duplex mode could not be determined
</text>
            </description>
            <reference>
              <text>IEEE Std 802.3, 30.3.1.1.32, aDuplexStatus
</text>
            </reference>
          </enum>
          <enum name="half">
            <value value="2"/>
            <description>
              <text>Half duplex</text>
            </description>
            <reference>
              <text>IEEE Std 802.3, 30.3.1.1.32, aDuplexStatus</text>
            </reference>
          </enum>
          <enum name="full">
            <value value="3"/>
            <description>
              <text>Full duplex</text>
            </description>
            <reference>
              <text>IEEE Std 802.3, 30.3.1.1.32, aDuplexStatus</text>
            </reference>
          </enum>
        </type>
        <description>
          <text>The current mode of operation of the IEEE Std 802.3 Ethernet interface.
The value of 'unknown' indicates that the current duplex mode could not be determined.
The value of 'full' indicates that the IEEE Std 802.3 Ethernet interface operates in full duplex mode.
The value of 'half' indicates that the IEEE Std 802.3 Ethernet interface operates in half duplex mode. </text>
        </description>
        <reference>
          <text>IEEE Std 802.3, 30.3.1.1.32, aDuplexStatus</text>
        </reference>
      </leaf>
      <leaf name="speed">
        <type name="uint64"/>
        <units name="Mb/s"/>
        <description>
          <text>Operational speed setting of the interface</text>
        </description>
      </leaf>
      <leaf name="flow-control">
        <type name="flow-control-settings"/>
        <description>
          <text>Operation flow-control setting on the interface</text>
        </description>
      </leaf>
      <leaf name="rate-control">
        <type name="rate-control"/>
        <description>
          <text>The current Rate Control mode of operation of the MAC sublayer of this IEEE Std 802.3 Ethernet interface</text>
        </description>
        <reference>
          <text>IEEE Std 802.3, 30.3.1.1.34, aRateControlStatus</text>
        </reference>
      </leaf>
      <leaf name="macc-extension-control">
        <type name="boolean"/>
        <description>
          <text>A value that identifies the current (when read) or target (when set) operational state of the EXTENSION MAC Control function (when read), as specified in IEEE Std 802.3, Annex 31C.</text>
        </description>
        <reference>
          <text>IEEE Std 802.3, 30.3.8.3 aEXTENSIONMACCtrlStatus
IEEE Std 802.3.1, dot3ExtensionMacCtrlStatus </text>
        </reference>
      </leaf>
      <leaf name="macc-pfc-control">
        <type name="boolean"/>
        <description>
          <text>A value that identifies the current (when read) or target (when set) operational state of the PFC MAC Control function (when read), as specified in IEEE Std 802.3, Annex 31C.
When set, the value of this object determines the operational PFC mode of the IEEE Std 802.3 Ethernet interface. A set to this object will force the IEEE Std 802.3 Ethernet interface into the specified mode. Note that the value of this object is ignored when the IEEE Std 802.3 Ethernet interface is not operating in full-duplex mode.
When read, the value of this object reflects the current operational PFC mode of the IEEE Std 802.3 Ethernet interface.</text>
        </description>
        <reference>
          <text>IEEE Std 802.3, 30.3.3.6, aPFCenableStatus
IEEE Std 802.3.1, dot3PFCAdminMode and dot3PFCOperMode</text>
        </reference>
      </leaf>
      <leaf name="macc-pause-control">
        <type name="pause-control"/>
        <description>
          <text>A value that identifies the current (when read) or target (when set) operational state of the PAUSE MAC Control function (when read).
This object is used to configure the default administrative PAUSE mode for this IEEE Std 802.3 Ethernet interface.
When set, this value of this object represents the administratively-configured PAUSE mode for this IEEE Std 802.3 Ethernet interface. If Auto-Negotiation is not enabled or is not implemented for the active MAU attached to this IEEE Std 802.3 Ethernet interface, the value of this object determines the operational PAUSE mode of the IEEE Std 802.3 Ethernet interface whenever it is operating in full-duplex mode. In this case, a set to this object will force the IEEE Std 802.3 Ethernet interface into the specified mode. If Auto-Negotiation is implemented and enabled for the MAU attached to this IEEE Std 802.3 Ethernet interface, the PAUSE mode for this IEEE Std 802.3 Ethernet interface is determined by Auto-Negotiation, and the value of this object denotes the mode to which the IEEE Std 802.3 Ethernet interface will automatically revert if/when Auto-Negotiation is later disabled.
Note that the value of this object is ignored when the IEEE Std 802.3 Ethernet interface is not operating in full-duplex mode. An attempt to set this object to 'enabled-Tx' or 'enabled-Rx' will fail on IEEE Std 802.3 Ethernet interfaces that do not support operation at greater than 100 Mb/s."
When read, the value of this object reflects the current operational PAUSE Control function of the IEEE Std 802.3 Ethernet interface.</text>
        </description>
        <reference>
          <text>IEEE Std 802.3.1, dot3PauseAdminMode and dot3PauseOperMode</text>
        </reference>
      </leaf>
      <leaf name="macc-control">
        <type name="macc-control"/>
        <config value="false"/>
        <description>
          <text>A list of the possible MAC Control functions implemented for this interface.</text>
        </description>
        <reference>
          <text>IEEE Std 802.3.1, dot3ControlFunctionsSupported</text>
        </reference>
      </leaf>
      <leaf name="frame-limit-slow-protocol">
        <type name="uint64"/>
        <units name="fps"/>
        <default value="10"/>
        <description>
          <text>The maximum number of Slow Protocol frames of a given subtype that can be transmitted in a one second interval. The default value is 10. </text>
        </description>
        <reference>
          <text>IEEE Std 802.3, 30.3.1.1.38, aSlowProtocolFrameLimit
IEEE Std 802.3.1, dot3SlowProtocolFrameLimit</text>
        </reference>
      </leaf>
    </container>
  </augment>
  <augment target-node="/if:interfaces-state/if:interface/if:statistics">
    <when condition="../if:type = 'ianaift:ethernetCsmacd'">
      <description>
        <text>Applies to all IEEE Std 802.3 Ethernet interfaces</text>
      </description>
    </when>
    <description>
      <text>Augments 'statistics' container in ietf-interfaces/interfaces-state model for IEEE Std 802.3 Ethernet interfaces</text>
    </description>
    <container name="Ethernet">
      <description>
        <text>Contains statistics specific to IEEE Std 802.3 Ethernet interfaces</text>
      </description>
      <leaf name="in-pkts-errors-FCS">
        <type name="uint64"/>
        <units name="frames"/>
        <description>
          <text>A count of frames received on a particular interface that are an integral number of octets in length but do not pass the FCS check. This count does not include frames received with frame-too-long or frame-too-short error. The count represented by an instance of this object is incremented when the frameCheckError status is returned by the MAC service to the LLC (or other MAC user). Received frames for which multiple error conditions pertain are, according to the conventions of IEEE 802.3 Layer Management, counted exclusively according to the error status presented to the LLC. Note: Coding errors detected by the Physical Layer for speeds above 10 Mb/s will cause the frame to fail the FCS check. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.
A frame that is counted by an instance of this object is also counted by the corresponding instance of 'in-errors' object.</text>
        </description>
        <reference>
          <text>IEEE Std 802.3, 30.3.1.1.6, aFrameCheckSequenceErrors</text>
        </reference>
      </leaf>
      <leaf name="in-pkts-errors-alignment-FCS">
        <type name="uint64"/>
        <units name="frames"/>
        <description>
          <text>A count of frames received on a particular interface that are not an integral number of octets in length and do not pass the FCS check. The count represented by an instance of this object is incremented when the alignmentError status is returned by the MAC service to the LLC (or other MAC user). Received frames for which multiple error conditions pertain are, according to the conventions of IEEE 802.3 Layer Management, counted exclusively according to the error status presented to the LLC. This counter does not increment for group encoding schemes greater than 4 bits per group. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.
A frame that is counted by an instance of this object is also counted by the corresponding instance of 'in-errors' object.</text>
        </description>
        <reference>
          <text>IEEE Std 802.3, 30.3.1.1.7, aAlignmentErrors</text>
        </reference>
      </leaf>
      <leaf name="in-giant-pkts">
        <type name="uint64"/>
        <units name="frames"/>
        <description>
          <text>A count of frames received on a particular interface that exceed the maximum permitted frame size. The count represented by an instance of this object is incremented when the frameTooLong status is returned by the MAC service to the LLC (or other MAC user). Received frames for which multiple error conditions pertain are, according to the conventions of IEEE 802.3 Layer Management, counted exclusively according to the error status presented to the LLC. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</text>
        </description>
        <reference>
          <text>IEEE Std 802.3, 30.3.1.1.25, aFrameTooLongErrors</text>
        </reference>
      </leaf>
      <leaf name="in-giant-threshold-pkts">
        <type name="uint64"/>
        <units name="octets"/>
        <description>
          <text>This indicates the MAC frame length at which the 'in-giants-pkts' counter is incremented </text>
        </description>
        <reference>
          <text>IEEE Std 802.3, 30.3.1.1.37, aMaxFrameLength</text>
        </reference>
      </leaf>
      <leaf name="in-errors-symbol">
        <type name="uint64"/>
        <units name="errors"/>
        <description>
          <text>For an IEEE Std 802.3 Ethernet operating at 100 Mb/s, the number of times there was an invalid data symbol when a valid carrier was present.
For an IEEE Std 802.3 Ethernet operating in half-duplex mode at 1000 Mb/s, the number of times the receiving media is non-idle (a carrier event) for a period of time equal to or greater than slotTime, and during which there was at least one occurrence of an event that causes the PHY to indicate 'Data reception error' or 'carrier extend error' on the GMII.
For an IEEE Std 802.3 Ethernet operating in full-duplex mode at 1000 Mb/s, the number of times the receiving media is non-idle (a carrier event) for a period of time equal to or greater than minFrameSize, and during which there was at least one occurrence of an event that causes the PHY to indicate 'Data reception error' on the GMII.
For an IEEE Std 802.3 Ethernet operating at 10 Gb/s, 40 Gb/s, and 100 Gb/s, it is a count of the number of times the receiving media is non-idle (the time between the Start of Packet Delimiter and the End of Packet Delimiter) for a period of time equal to or greater than minFrameSize, and during which there was at least one occurrence of an event that causes the PHY to indicate 'Receive Error' on the XGMII, the XLGMII, or the CGMII. The count represented by an instance of this object is incremented at most once per carrier event, even if multiple symbol errors occur during the carrier event.
This count does not increment if a collision is present.
This counter does not increment when the IEEE Std 802.3 Ethernet is operating at 10 Mb/s.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime </text>
        </description>
        <reference>
          <text>IEEE Std 802.3, 30.3.2.1.5, aSymbolErrorDuringCarrier
</text>
        </reference>
      </leaf>
      <leaf name="rate-control-ability">
        <type name="boolean"/>
        <description>
          <text>The value of 'false' for IEEE Std 802.3 Ethernet interfaces operating at speeds above 1000 Mb/s that do not support Rate Control through lowering the average data rate of the MAC sublayer, with frame granularity.
The value of 'true' for IEEE Std 802.3 Ethernet interfaces operating at speeds above 1000 Mb/s that support Rate Control through lowering the average data rate of the MAC sublayer, with frame granularity.</text>
        </description>
        <reference>
          <text>IEEE Std 802.3, 30.3.1.1.33, aRateControlAbility</text>
        </reference>
      </leaf>
      <container name="statistics-csmacd">
        <description>
          <text>Group of statistics specific to CSMA/CD operation of selected IEEE Std 802.3 Ethernet interfaces. </text>
        </description>
        <leaf name="in-errors-sqe-test">
          <type name="uint64"/>
          <units name="errors"/>
          <description>
            <text>A count of times that the SQE TEST ERROR is received on a particular interface. The SQE TEST ERROR is set in accordance with the rules for verification of the SQE detection mechanism in the PLS Carrier Sense Function as described in IEEE Std 802.3, 7.2.4.6.
This counter does not increment on IEEE Std 802.3 Ethernet interfaces operating at speeds greater than 10 Mb/s, or on IEEE Std 802.3 Ethernet interfaces operating in full-duplex mode.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 7.2.4.6, also 30.3.2.1.4,  aSQETestErrors
</text>
          </reference>
        </leaf>
        <leaf name="in-errors-MAC-internal">
          <type name="uint64"/>
          <units name="errors"/>
          <description>
            <text>A count of frames for which reception on a particular IEEE Std 802.3 Ethernet interface fails due to an internal MAC sublayer receive error.
A frame is only counted by an instance of this object if it is not counted by the corresponding instance of either the 'in-pkts-too-long' object, the 'in-pkts-errors-alignment-FCS' object, or the 'in-pkts-errors-FCS' object. The precise meaning of the count represented by an instance of this object is implementation-specific.
In particular, an instance of this object may represent a count of receive errors on a particular IEEE Std 802.3 Ethernet interface that are not otherwise counted.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.1.1.15, aFramesLostDueToIntMACRcvError</text>
          </reference>
        </leaf>
        <leaf name="out-pkts-collision-single">
          <type name="uint64"/>
          <units name="frames"/>
          <description>
            <text>A count of frames that are involved in a single collision, and are subsequently transmitted successfully. A frame that is counted by an instance of this object is also counted by the corresponding instance of either 'out-unicast-ptks', 'out-broadcast-pkts', or 'out-multicast-pkts', and is not counted by the corresponding instance of the 'out-ptks-collision-multiple'.
This counter does not increment when the IEEE Std 802.3 Ethernet interface is operating in full-duplex mode.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.1.1.3, aSingleCollisionFrames</text>
          </reference>
        </leaf>
        <leaf name="out-pkts-collision-multiple">
          <type name="uint64"/>
          <units name="frames"/>
          <description>
            <text>A count of frames that are involved in multiple collisions, and are subsequently transmitted successfully. A frame that is counted by an instance of this object is also counted by the corresponding instance of either 'out-unicast-ptks', 'out-broadcast-pkts', or 'out-multicast-pkts', and is not counted by the corresponding instance of the 'out-ptks-collision-single'.
This counter does not increment when the IEEE Std 802.3 Ethernet interface is operating in full-duplex mode.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.1.1.4, aMultipleCollisionFrames</text>
          </reference>
        </leaf>
        <leaf name="out-pkts-deferred">
          <type name="uint64"/>
          <units name="frames"/>
          <description>
            <text>A count of frames for which the first transmission attempt on a particular IEEE Std 802.3 Ethernet interface is delayed because the medium is busy.
A deferred frame that is not subject to any number of collisions is not counted by an instance of 'out-pkts-collision-single' or 'out-pkts-collision-multiple' objects.
This counter does not increment when the IEEE Std 802.3 Ethernet interface is operating in full-duplex mode.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.1.1.9, aFramesWithDeferredXmissions</text>
          </reference>
        </leaf>
        <leaf name="out-pkts-collisions-excessive">
          <type name="uint64"/>
          <units name="frames"/>
          <description>
            <text>A count of frames for which transmission on a particular IEEE Std 802.3 Ethernet interface fails due to excessive collisions.
This counter does not increment when the IEEE Std 802.3 Ethernet interface is operating in full-duplex mode.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.1.1.11, aFramesAbortedDueToXSColls</text>
          </reference>
        </leaf>
        <leaf name="out-collisions-late">
          <type name="uint64"/>
          <units name="collisions"/>
          <description>
            <text>The number of times that a collision is detected on a particular IEEE Std 802.3 Ethernet interface later than one slotTime into the transmission of a packet.
A (late) collision included in a count represented by an instance of this object is also considered as a (generic) collision for purposes of other collision-related statistics.
This counter does not increment when the IEEE Std 802.3 Ethernet interface is operating in full-duplex mode.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.1.1.10, aLateCollisions</text>
          </reference>
        </leaf>
        <leaf name="out-errors-MAC-internal">
          <type name="uint64"/>
          <units name="errors"/>
          <description>
            <text>A count of frames for which transmission on a particular IEEE Std 802.3 Ethernet interface fails due to an internal MAC sublayer transmit error.
A frame is only counted by an instance of this object if it is not counted by the corresponding instance of either the 'out-collisions-late' object, the 'out-pkts-collisions-excessive' object, or the 'out-errors-carrier-sense' object. The precise meaning of the count represented by an instance of this object is implementation-specific. In particular, an instance of this object may represent a count of transmission errors on a particular IEEE Std 802.3 Ethernet interface that are not otherwise counted.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.1.1.12, aFramesLostDueToIntMACXmitError</text>
          </reference>
        </leaf>
        <leaf name="out-errors-carrier-sense">
          <type name="uint64"/>
          <units name="errors"/>
          <description>
            <text>The number of times that the carrier sense condition was lost or never asserted when attempting to transmit a frame on a particular IEEE Std 802.3 Ethernet interface.
The count represented by an instance of this object is incremented at most once per transmission attempt, even if the carrier sense condition fluctuates during a transmission attempt.
This counter does not increment when the IEEE Std 802.3 Ethernetinterface is operating in full-duplex mode.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.1.1.13, aCarrierSenseErrors</text>
          </reference>
        </leaf>
        <list name="collision-histogram">
          <key value="eth:collision-count"/>
          <description>
            <text>A collection of collision histograms for a particular interface.</text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.1.1.30, aCollisionFrames</text>
          </reference>
          <leaf name="collision-count">
            <type name="uint64"/>
            <units name="collisions"/>
            <description>
              <text>The number of per-frame media collisions for which a particular collision histogram cell represents the frequency on a particular interface.</text>
            </description>
          </leaf>
          <leaf name="collision-count-pkts">
            <type name="uint64"/>
            <units name="frames"/>
            <description>
              <text>A count of individual MAC frames for which the transmission (successful or otherwise) on a particular interface occurs after the frame has experienced exactly the number of collisions in the associated dot3CollCount object.
For example, a frame which is transmitted on an interface after experiencing exactly 4 collisions would be indicated by incrementing only collision-count-pkts object associated with the collision-count value of 4. No other instance of collision-count-pkts would be incremented in this example.
This counter does not increment when the interface is operating in full-duplex mode.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime. </text>
            </description>
          </leaf>
        </list>
      </container>
      <container name="statistics-macc">
        <description>
          <text>Group of statistics specific to MAC Control operation of selected IEEE Std 802.3 Ethernet interfaces. </text>
        </description>
        <reference>
          <text>IEEE Std 802.3
IEEE Std 802.3.1, dot3ExtensionTable</text>
        </reference>
        <leaf name="in-pkts-macc-extension">
          <type name="uint64"/>
          <units name="frames"/>
          <description>
            <text>A count of Extension MAC Control frames received on this IEEE Std 802.3 Ethernet interface.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.8.2 aEXTENSIONMACCtrlFramesReceived
IEEE Std 802.3.1, dot3HCInExtensionFrames</text>
          </reference>
        </leaf>
        <leaf name="in-pkts-macc-pfc">
          <type name="uint64"/>
          <units name="frames"/>
          <description>
            <text>A count of PFC MAC Control frames received on this IEEE Std 802.3 Ethernet interface.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3.1, dot3HCInPFCFrames</text>
          </reference>
        </leaf>
        <leaf name="in-pkts-macc-pause">
          <type name="uint64"/>
          <units name="frames"/>
          <description>
            <text>A count of PAUSE MAC Control frames received on this IEEE Std 802.3 Ethernet interface.
This counter does not increment when the IEEE Std 802.3 Ethernet interface is operating in half-duplex mode
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.4.3,aPAUSEMACCtrlFramesReceived
IEEE Std 802.3.1, dot3HCInPauseFrames and dot3InPauseFrames</text>
          </reference>
        </leaf>
        <leaf name="in-pkts-macc-unknown">
          <type name="uint64"/>
          <units name="frames"/>
          <description>
            <text>A count of  MAC Control frames with unknown/undefined/unsupported received on this IEEE Std 802.3 Ethernet interface.
This counter does not increment when the IEEE Std 802.3 Ethernet interface is operating in half-duplex mode
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.3.5 aUnsupportedOpcodesReceived
IEEE Std 802.3.1, dot3ControlInUnknownOpcodes and dot3HCControlInUnknownOpcodes</text>
          </reference>
        </leaf>
        <leaf name="out-pkts-macc-extension">
          <type name="uint64"/>
          <units name="frames"/>
          <description>
            <text>A count of Extension MAC Control frames transmitted on this IEEE Std 802.3 Ethernet interface.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.8.1 aEXTENSIONMACCtrlFramesTransmitted
IEEE Std 802.3.1, dot3HCOutExtensionFrames </text>
          </reference>
        </leaf>
        <leaf name="out-pkts-macc-pfc">
          <type name="uint64"/>
          <units name="frames"/>
          <description>
            <text>A count of PFC MAC Control frames transmitted on this IEEE Std 802.3 Ethernet interface.
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3.1, dot3HCOutPFCFrames </text>
          </reference>
        </leaf>
        <leaf name="out-pkts-macc-pause">
          <type name="uint64"/>
          <units name="frames"/>
          <description>
            <text>A count of PAUSE MAC Control frames transmitted on this IEEE Std 802.3 Ethernet interface.
This counter does not increment when the IEEE Std 802.3 Ethernet interface is operating in half-duplex mode
Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.4.2,aPAUSEMACCtrlFramesTransmitted
IEEE Std 802.3.1, dot3HCOutPauseFrames and dot3OutPauseFrames</text>
          </reference>
        </leaf>
      </container>
      <container name="statistics-lpi">
        <description>
          <text>Group of statistics specific to MAC Control operation of selected IEEE Std 802.3 Ethernet interfaces. </text>
        </description>
        <leaf name="in-lpi-transiton-count">
          <type name="uint64"/>
          <units name="microsends"/>
          <description>
            <text>A count of occurrences of the transition from DEASSERT to ASSERT of the LPI_INDICATE parameter. The indication reflects the state of the PHY according to the requirements of the RS (see IEEE Std 802.3 22.7, 35.4, and 46.4).
This counter has a maximum increment rate of 50 000 counts per second at 100 Mb/s; 90 000 counts per second at 1000 Mb/s; and 230 000 counts per second at 10 Gb/s. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.2.1.11 aReceiveLPITransitions</text>
          </reference>
        </leaf>
        <leaf name="in-lpi-ms">
          <type name="uint64"/>
          <units name="microsends"/>
          <description>
            <text>A count reflecting the amount of time that the LPI_REQUEST parameter has the value ASSERT.
The request is indicated to the PHY according to the requirements of the RS (see IEEE Std 802.3 22.7, 35.4, and 46.4).
This counter has a maximum increment rate of 1 000 000 counts per second. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.2.1.8 aTransmitLPIMicroseconds</text>
          </reference>
        </leaf>
        <leaf name="out-lpi-transiton-count">
          <type name="uint64"/>
          <units name="microsends"/>
          <description>
            <text>A count of occurrences of the transition from state LPI_DEASSERTED to state LPI_ASSERTED of the LPI transmit state diagram is the RS. The state transition corresponds to the assertion of the LPI_REQUEST parameter. The request is indicated to the PHY according to the requirements of the RS (see IEEE Std 802.3 22.7, 35.4, 46.4.)
This counter has a maximum increment rate of 50 000 counts per second at 100 Mb/s; 90 000 counts per second at 1000 Mb/s; and 230 000 counts per second at 10 Gb/s. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.2.1.10 aTransmitLPITransitions</text>
          </reference>
        </leaf>
        <leaf name="out-lpi-ms">
          <type name="uint64"/>
          <units name="microsends"/>
          <description>
            <text>A count reflecting the amount of time that the LPI_INDICATION parameter has the value ASSERT.
The request is indicated to the PHY according to the requirements of the RS (see IEEE Std 802.3 22.7, 35.4, and 46.4).
This counter has a maximum increment rate of 1 000 000 counts per second. </text>
          </description>
          <reference>
            <text>IEEE Std 802.3, 30.3.2.1.9 aReceiveLPIMicroseconds</text>
          </reference>
        </leaf>
      </container>
    </container>
  </augment>
</module>
